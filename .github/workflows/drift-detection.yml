name: Terraform Drift Detection
on:
  schedule:
    # Run every day at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  drift-detection:
    name: Detect Configuration Drift
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [standard, mini, ai, full]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare environment variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: | 
          echo "ARM_CLIENT_ID=$( jq -r '.clientId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_CLIENT_SECRET=$( jq -r '.clientSecret' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_SUBSCRIPTION_ID=$( jq -r '.subscriptionId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_TENANT_ID=$( jq -r '.tenantId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV
        shell: bash

      - name: Open firewall of the TF State Storage Account
        env:
          SA_STATE: ${{ secrets.SA_STATE }}
        run: |
          sa=($(echo $SA_STATE  | tr "/" "\n"))
          az account set --subscription "${sa[1]}"
          az storage account update --resource-group "${sa[3]}" --name "${sa[7]}" --public-network-access Enabled
        shell: bash

      - name: Terraform Init
        run: terraform -chdir=demo init

      - name: Terraform Plan - Detect Drift
        id: plan
        env:
          TF_VAR_additional_access_policy_object_ids: ${{ vars.ADDITIONAL_ACCESS_POLICY_OBJECT_IDS }}
          TF_VAR_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
        run: |
          terraform -chdir=demo plan -var-file="${{ matrix.environment }}.tfvars" -detailed-exitcode -no-color > plan_output.txt
          echo "exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Check for drift
        if: steps.plan.outputs.exit_code == 2
        run: |
          echo "‚ö†Ô∏è Configuration drift detected in ${{ matrix.environment }} environment!"
          cat plan_output.txt

      - name: Create Issue on Drift Detection
        if: steps.plan.outputs.exit_code == 2
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('demo/plan_output.txt', 'utf8');
            
            const title = `üö® Configuration Drift Detected - ${{ matrix.environment }} Environment`;
            const body = `## Configuration Drift Alert
            
            **Environment:** ${{ matrix.environment }}
            **Detection Time:** ${new Date().toISOString()}
            
            ### Detected Changes:
            \`\`\`terraform
            ${plan}
            \`\`\`
            
            ### Action Required:
            - Review the detected changes
            - Determine if changes are expected
            - Apply corrective actions if needed
            
            **Auto-generated by:** Drift Detection Workflow`;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['infrastructure', 'drift-detection', 'alert']
            });

      - name: Close firewall of the TF State Storage Account
        if: always()
        env:
          SA_STATE: ${{ secrets.SA_STATE }}
        run: |
          sa=($(echo $SA_STATE  | tr "/" "\n"))
          az storage account update --resource-group "${sa[3]}" --name "${sa[7]}" --public-network-access Disabled
        shell: bash
