name: Terraform Destroy
on:
  workflow_dispatch:
  schedule:
    - cron:  '00 18 * * 5'    
jobs:
  build:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare environment variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: | 
          # Parse Azure secret into Terraform variables
          echo "ARM_CLIENT_ID=$( jq -r '.clientId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_CLIENT_SECRET=$( jq -r '.clientSecret' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_SUBSCRIPTION_ID=$( jq -r '.subscriptionId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_TENANT_ID=$( jq -r '.tenantId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV
        shell: bash

      - name: Open Firewall of the TF State Storage Account
        env:
          SA_STATE: ${{ secrets.SA_STATE }}
        run: |
          sa=($(echo $SA_STATE  | tr "/" "\n"))
          az account set --subscription "$sa[2]"
          az storage account update --resource-group "$sa[4]" --name "$sa[8]" --public-network-access Enabled
        shell: bash        

      - name: Terraform Init 
        id: init
        run: terraform -chdir=demo init

      - name: Terraform Destroy 
        id: destroy
        env: 
          TF_VAR_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
        run: terraform -chdir=demo destroy -auto-approve -no-color
        
