name: Terraform Apply - Palo Alto
on:
  workflow_dispatch:
jobs:
  build:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare environment variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: | 
          # Parse Azure secret into Terraform variables
          echo "ARM_CLIENT_ID=$( jq -r '.clientId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_CLIENT_SECRET=$( jq -r '.clientSecret' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_SUBSCRIPTION_ID=$( jq -r '.subscriptionId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_TENANT_ID=$( jq -r '.tenantId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV
        shell: bash

      - name: Open firewall of the TF State Storage Account
        env:
          SA_STATE: ${{ secrets.SA_STATE }}
        run: |
          sa=($(echo $SA_STATE  | tr "/" "\n"))
          az account set --subscription "${sa[1]}"
          az storage account update --resource-group "${sa[3]}" --name "${sa[7]}" --public-network-access Enabled
        shell: bash

      - name: Terraform Init 
        id: init 
        run: |
          terraform -chdir=demo init \
            -backend-config="subscription_id=${{ vars.TFSTATE_SUBSCRIPTION_ID }}" \
            -backend-config="resource_group_name=${{ vars.TFSTATE_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ vars.TFSTATE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ vars.TFSTATE_CONTAINER }}" \
            -backend-config="key=${{ vars.TFSTATE_KEY }}" \
            -backend-config="use_azuread_auth=true"

      - name: Terraform Apply 
        id: apply
        env:
          TF_VAR_additional_access_policy_object_ids: ${{ vars.ADDITIONAL_ACCESS_POLICY_OBJECT_IDS }}
          TF_VAR_subscription_id: ${{ env.ARM_SUBSCRIPTION_ID }}
          TF_VAR_tfstate_subscription_id: ${{ vars.TFSTATE_SUBSCRIPTION_ID }}
          TF_VAR_tfstate_resource_group: ${{ vars.TFSTATE_RESOURCE_GROUP }}
          TF_VAR_tfstate_storage_account: ${{ vars.TFSTATE_STORAGE_ACCOUNT }}
          TF_VAR_tfstate_container: ${{ vars.TFSTATE_CONTAINER }}
          TF_VAR_tfstate_key: ${{ vars.TFSTATE_KEY }}     
        run: terraform -chdir=demo apply -var-file=palo-alto.tfvars -auto-approve -no-color
        